// <auto-generated />
using System;
using ContentCreationTool.Api.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ContentCreationTool.Api.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250426221750_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.2");

            modelBuilder.Entity("ContentCreationTool.Api.Domain.Entities.ContentItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("ModelTypeUsed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ContentItems");
                });

            modelBuilder.Entity("ContentCreationTool.Api.Domain.Entities.ImageDocument", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ContentItemId")
                        .HasColumnType("TEXT");

                    b.Property<string>("ExtractedText")
                        .HasColumnType("TEXT");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Summary")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ContentItemId")
                        .IsUnique();

                    b.ToTable("ImageDocuments");
                });

            modelBuilder.Entity("ContentCreationTool.Api.Domain.Entities.TextDocument", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ContentItemId")
                        .HasColumnType("TEXT");

                    b.Property<string>("ExtractedText")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Summary")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ContentItemId")
                        .IsUnique();

                    b.ToTable("TextDocuments");
                });

            modelBuilder.Entity("ContentCreationTool.Api.Domain.Entities.ImageDocument", b =>
                {
                    b.HasOne("ContentCreationTool.Api.Domain.Entities.ContentItem", "ContentItem")
                        .WithOne("ImageDocument")
                        .HasForeignKey("ContentCreationTool.Api.Domain.Entities.ImageDocument", "ContentItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ContentItem");
                });

            modelBuilder.Entity("ContentCreationTool.Api.Domain.Entities.TextDocument", b =>
                {
                    b.HasOne("ContentCreationTool.Api.Domain.Entities.ContentItem", "ContentItem")
                        .WithOne("TextDocument")
                        .HasForeignKey("ContentCreationTool.Api.Domain.Entities.TextDocument", "ContentItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ContentItem");
                });

            modelBuilder.Entity("ContentCreationTool.Api.Domain.Entities.ContentItem", b =>
                {
                    b.Navigation("ImageDocument");

                    b.Navigation("TextDocument");
                });
#pragma warning restore 612, 618
        }
    }
}
